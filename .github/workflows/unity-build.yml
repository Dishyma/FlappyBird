name: Build Unity Project

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  buildForAllPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneLinux64
          - StandaloneWindows64
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true
          
      # Cache
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-

      # Limpiar cualquier licencia existente
      - name: Clean existing licenses
        run: |
          sudo rm -rf /root/.local/share/unity3d/Unity/
          sudo rm -rf /home/runner/.local/share/unity3d/Unity/
          sudo rm -rf ~/.local/share/unity3d/Unity/
          
      # Configurar directorio de licencia
      - name: Create license directory
        run: |
          sudo mkdir -p /root/.local/share/unity3d/Unity/
          sudo chmod -R 777 /root/.local/share/unity3d/Unity/
          
      # Request manual activation file
      - name: Request manual activation file
        id: request-manual
        uses: game-ci/unity-request-activation-file@v2
        env:
          UNITY_VERSION: 2020.1.1f1

      # Get activation file
      - name: Get activation file
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.request-manual.outputs.filePath }}
          path: ${{ steps.request-manual.outputs.filePath }}

      # Activar Unity manualmente
      - name: Activate Unity
        uses: game-ci/unity-activate@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_LICENSING_SERVER: true

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          allowDirtyBuild: true
          
      # Upload build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}